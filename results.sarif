{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0-rtm.5.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "informationUri": "https://github.com/goodwithtech/dockle",
          "name": "Dockle",
          "rules": [
            {
              "id": "CIS-DI-0001",
              "name": "CIS-DI-0001",
              "shortDescription": {
                "text": "Create a user for the container"
              },
              "helpUri": "https://github.com/goodwithtech/dockle/blob/master/CHECKPOINT.md#CIS-DI-0001"
            },
            {
              "id": "DKL-DI-0006",
              "name": "DKL-DI-0006",
              "shortDescription": {
                "text": "Avoid latest tag"
              },
              "helpUri": "https://github.com/goodwithtech/dockle/blob/master/CHECKPOINT.md#DKL-DI-0006"
            },
            {
              "id": "CIS-DI-0005",
              "name": "CIS-DI-0005",
              "shortDescription": {
                "text": "Enable Content trust for Docker"
              },
              "helpUri": "https://github.com/goodwithtech/dockle/blob/master/CHECKPOINT.md#CIS-DI-0005"
            },
            {
              "id": "CIS-DI-0006",
              "name": "CIS-DI-0006",
              "shortDescription": {
                "text": "Add HEALTHCHECK instruction to the container image"
              },
              "helpUri": "https://github.com/goodwithtech/dockle/blob/master/CHECKPOINT.md#CIS-DI-0006"
            },
            {
              "id": "DKL-LI-0003",
              "name": "DKL-LI-0003",
              "shortDescription": {
                "text": "Only put necessary files"
              },
              "helpUri": "https://github.com/goodwithtech/dockle/blob/master/CHECKPOINT.md#DKL-LI-0003"
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "CIS-DI-0001",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Last user should not be root"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata"
                }
              }
            }
          ]
        },
        {
          "ruleId": "DKL-DI-0006",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Avoid 'latest' tag"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker://test-container"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CIS-DI-0005",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "export DOCKER_CONTENT_TRUST=1 before docker pull/build"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ENVIRONMENT variable on HOST OS"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CIS-DI-0006",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "not found HEALTHCHECK statement"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "metadata"
                }
              }
            }
          ]
        },
        {
          "ruleId": "DKL-LI-0003",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Suspicious directory : app/.git , unnecessary file : app/Dockerfile "
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/.git"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/Dockerfile"
                }
              }
            }
          ]
        }
      ]
    }
  ]
}